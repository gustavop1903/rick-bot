version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: rick-bot
    container_name: rick-bot
    restart: always
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - JWT_ACESSES_KEY=${JWT_ACESSES_KEY}
    depends_on:
      - redis
      - vectorstore
      - postgres
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    ports:
      - "7002:7002"
    networks:
      - rick-net

  postgres:
      image: postgres:14
      restart: always
      environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
      ports:
        - "5432:5432"
      volumes:
        - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:7
    container_name: rick-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - rick-net

  vectorstore:
    image: qdrant/qdrant
    container_name: rick-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    restart: always
    networks:
      - rick-net
    environment:
      - QDRANT__STORAGE__BACKEND=local
      - QDRANT__STORAGE__LOCAL__PATH=/qdrant/storage
      - QDRANT__LOG_LEVEL=info
      - QDRANT__PERSISTENCE__RELOAD_TIMEOUT=60
      - QDRANT__PERSISTENCE__CHECKPOINT_INTERVAL=60
      - QDRANT__PERSISTENCE__CHECKPOINT_THRESHOLD=1000
      - QDRANT__PERSISTENCE__CHECKPOINT_MAX_SIZE=1000000000
      - QDRANT__PERSISTENCE__CHECKPOINT_MAX_AGE=3600
      - QDRANT__PERSISTENCE__CHECKPOINT_MAX_COUNT=10

volumes:
  redis_data:
  qdrant_data:

networks:
  rick-net:
